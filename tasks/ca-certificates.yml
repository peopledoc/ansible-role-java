---
- name: Get JAVA_HOME
  shell: . /etc/profile && echo $JAVA_HOME
  register: JAVA_HOME
  changed_when: false
  check_mode: false

- name: Check if Java keystore use default password
  command: "keytool -list -keystore {{ JAVA_HOME.stdout }}/{{ cacerts_location }} -storepass {{ default_keystore_password }}"
  register: keytool_list
  ignore_errors: yes
  changed_when: false
  no_log: true
  check_mode: false

- name: Set Java keystore password
  command: "keytool -storepasswd -new {{ ca_certificates.password }} -storepass {{ default_keystore_password }} -keystore {{ JAVA_HOME.stdout }}/{{ cacerts_location }}"
  when:
    - keytool_list is success
    - default_keystore_password != ca_certificates.password # update password only if required
  no_log: true

- name: Add CA certificates to Java keystore
  java_cert:
    cert_alias: "{{ item.alias|default(omit) }}"
    cert_url: "{{ item.url|default(omit) }}"
    cert_path: "{{ item.path|default(omit) }}"
    keystore_path: "{{ JAVA_HOME.stdout }}/{{ cacerts_location }}"
    keystore_pass: "{{ ca_certificates.password }}"
    state: present
  with_items: "{{ ca_certificates.certificates }}"

# Workaround for https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=894979
# This only happens on Stretch with Java 11 via stretch-backports.
# This bug is fixed in ca-certificates-java in Buster.
- name: Check format of keystore (stretch-backports)
  stat:
    path: /etc/ssl/certs/java/cacerts
  register: cacert_stat
  when: ansible_distribution_release == 'stretch' and 'openjdk-11-jdk' in java_packages

- name: Migrate keystore to JKS (stretch-backports)
  command: "keytool -importkeystore -srckeystore /etc/ssl/certs/java/cacerts -destkeystore /etc/ssl/certs/java/cacerts -srcstoretype PKCS12 -deststoretype JKS -srcstorepass {{ ca_certificates.password }} -deststorepass {{ ca_certificates.password }}"
  changed_when: true
  when: ansible_distribution_release == 'stretch' and 'openjdk-11-jdk' in java_packages and "application/octet-stream" in cacert_stat.stat.mimetype
